{"version":3,"sources":["Components/ToDoList/ToDoList.module.css","Components/SearchPanel/SearchPanel.module.css","Components/AppHeader/AppHeader.module.css","Components/AppHeader/AppHeader.jsx","Components/SearchPanel/SearchPanel.jsx","Components/ToDoList/ToDoListItem.jsx","Components/ToDoList/ToDoList.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","AppHeader","toDo","done","className","s","appHeader","ItemStatusFilter","state","activeFilter","buttons","label","name","id","setFilter","e","props","setButtonFilter","target","activeButton","this","btnGroup","map","key","active","onClick","React","PureComponent","SearchPanel","placeholder","baseBlock","searchInput","onChange","setSearchText","value","ToDoListItem","setImportant","toggleImportant","deleteElement","onDeleted","toggleDone","important","toDoListItem","toDoListItemLabel","btnWrap","excBtn","btn","trashBtn","defaultProps","ToDoList","newItemText","errors","ref","createRef","changeText","clear","setState","current","addElement","todos","toDoList","item","onDelete","CreateItem","Component","forwardRef","createItemWrapper","s_searchPanel","App","data","lastId","filterText","buttonFilter","putNewDataInLocalStorage","localStorage","setItem","JSON","stringify","newData","filter","toggleProperty","arr","propName","i","findIndex","slice","newLastId","createToDoItem","search","items","text","length","toLowerCase","indexOf","val","savedTodoItems","parse","getItem","todoItemsWithNewId","index","filteredData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222f4013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"important\":\"ToDoList_important__k6C16\",\"toDoList\":\"ToDoList_toDoList__hWKq0\",\"toDoListItem\":\"ToDoList_toDoListItem__Fl_-T\",\"toDoListItemLabel\":\"ToDoList_toDoListItemLabel__2qV8M\",\"btnWrap\":\"ToDoList_btnWrap__Z-JUe\",\"btn\":\"ToDoList_btn__2EzZz\",\"excBtn\":\"ToDoList_excBtn__3K01o\",\"trashBtn\":\"ToDoList_trashBtn__3hXSa\",\"done\":\"ToDoList_done__K6XMJ\",\"createItemWrapper\":\"ToDoList_createItemWrapper__tiwpo\",\"errors\":\"ToDoList_errors__2cuTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseBlock\":\"SearchPanel_baseBlock__hYsJL\",\"searchInput\":\"SearchPanel_searchInput__mKZKa\",\"btnGroup\":\"SearchPanel_btnGroup__3c-KR\",\"active\":\"SearchPanel_active__1UNzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1I59V\"};","import React from \"react\";\r\nimport s from './AppHeader.module.css';\r\nimport './../../style.css';\r\n\r\nconst AppHeader = ({toDo,done})=>{\r\n    return (<div className={`${s.appHeader} flex`}>\r\n        <h1>Todo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n    </div>)\r\n}\r\nexport default AppHeader\r\n\r\n","import React from \"react\";\r\nimport s from './SearchPanel.module.css';\r\n\r\nclass ItemStatusFilter extends React.PureComponent {\r\n    state = {\r\n        activeFilter:0\r\n    }\r\n    buttons = [\r\n        {label:'All',name:\"all\",id:0},\r\n        {label:'Active',name:\"active\",id:1},\r\n        {label:'Done',name:\"done\",id:2},\r\n    ]\r\n    setFilter = (e)=>{\r\n        this.props.setButtonFilter(e.target.name)\r\n    }\r\n    render() {\r\n        const {activeButton} = this.props;\r\n        return (\r\n            <div className={s.btnGroup}>\r\n                {this.buttons.map((e)=>(\r\n                    <button\r\n                        name={e.name}\r\n                        key={e.id}\r\n                        className={(activeButton===e.name)?s.active:\"\"}\r\n                        onClick={this.setFilter}>{e.label}</button>\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SearchPanel = ({placeholder = '', ...props}) => {\r\n    const setSearchText = (e)=>{\r\n        props.setSearchText(e.target.value)\r\n    }\r\n    return (<div className={s.baseBlock}>\r\n        <input placeholder={placeholder} className={s.searchInput} onChange={setSearchText}/>\r\n        <ItemStatusFilter setButtonFilter={props.setButtonFilter} activeButton={props.activeButton}/>\r\n    </div>)\r\n}\r\n\r\nexport default SearchPanel","import React from \"react\";\r\nimport s from './ToDoList.module.css';\r\n\r\nclass ToDoListItem extends React.PureComponent {\r\n    setImportant = () => {\r\n        this.props.toggleImportant()\r\n    }\r\n    deleteElement = () => {\r\n        this.props.onDeleted();\r\n    }\r\n    toggleDone = () => {\r\n        this.props.toggleDone();\r\n    }\r\n\r\n    render() {\r\n        const {label, done, important} = this.props;\r\n\r\n        return (\r\n            <div className={s.toDoListItem}>\r\n            <span\r\n                className={`${s.toDoListItemLabel}  ${important && s.important} ${done && s.done}`}\r\n                onClick={this.toggleDone}\r\n            >{label}</span>\r\n                <div className={s.btnWrap}>\r\n                    <button className={`${s.excBtn} ${s.btn}`} onClick={this.setImportant}>\r\n                        <i className={\"fa fa-exclamation\"}/>\r\n                    </button>\r\n                    <button className={`${s.trashBtn} ${s.btn}`} onClick={this.deleteElement}>\r\n                        <i className={\"fa fa-trash-o\"}/>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nToDoListItem.defaultProps = {important: false}\r\nexport default ToDoListItem;","import React from \"react\";\r\nimport ToDoListItem from \"./ToDoListItem\";\r\nimport s from './ToDoList.module.css';\r\nimport s_searchPanel from '../SearchPanel/SearchPanel.module.css'\r\n\r\nclass ToDoList extends React.Component {\r\n    state = {\r\n        newItemText: \"\",\r\n        errors: \"\"\r\n    }\r\n    ref = React.createRef();\r\n    changeText = (e, clear = false) => {\r\n\r\n        this.setState(() => {\r\n            return {\r\n                errors: \"\",\r\n                newItemText: !clear ? (this.ref.current.value) : ''\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addElement = () => {\r\n        const label = this.state.newItemText\r\n        if (!label) {\r\n            this.setState((state) => ({\r\n                ...state,\r\n                errors: \"Text field cannot be empty!\"\r\n            }))\r\n            return;\r\n        }\r\n        this.props.addElement(label);\r\n\r\n        this.changeText(null, true);\r\n    }\r\n\r\n    render() {\r\n        let {todos, ...props} = this.props;\r\n        const {newItemText, errors} = this.state\r\n        return (\r\n            <>\r\n                <ul className={s.toDoList}>\r\n                    {todos.map(({id, ...item}) => (\r\n                            <li key={id}>\r\n                                <ToDoListItem\r\n                                    {...item}\r\n                                    onDeleted={() => {\r\n                                        props.onDelete(id);\r\n                                    }}\r\n                                    toggleImportant={() => {\r\n                                        props.toggleImportant(id)\r\n                                    }}\r\n                                    toggleDone={() => {\r\n                                        props.toggleDone(id)\r\n                                    }}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    )\r\n                    }\r\n                </ul>\r\n                <CreateItem newItemText={newItemText} errors={errors} ref={this.ref} changeText={this.changeText} addElement={this.addElement}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst CreateItem = React.forwardRef(({newItemText, errors,changeText,addElement},ref) => {\r\n    return <>\r\n        <div className={s.createItemWrapper}>\r\n            <input\r\n                onChange={changeText}\r\n                className={s_searchPanel.searchInput}\r\n                value={newItemText} ref={ref}\r\n                placeholder={\"Create new item...\"}\r\n            />\r\n            <button onClick={addElement} className={s.btn}>Add item</button>\r\n        </div>\r\n        <div className={s.errors}>\r\n            <span>{errors}</span>\r\n        </div>\r\n    </>\r\n})\r\n\r\nexport default ToDoList\r\n\r\n","import AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\nimport React from \"react\";\r\nimport '../../style.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: [],\r\n        lastId: 0,\r\n        filterText: \"\",\r\n        buttonFilter: 'all'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const savedTodoItems = JSON.parse(localStorage.getItem(\"todo_items\")) || [];\r\n        const todoItemsWithNewId = savedTodoItems.map((val,index)=>{\r\n            val.id = index;\r\n        })\r\n        this.setState(() => ({data: savedTodoItems,lastId:todoItemsWithNewId.length-1}))\r\n    }\r\n\r\n    putNewDataInLocalStorage = (data) => {\r\n        localStorage.setItem('todo_items', JSON.stringify(data));\r\n    }\r\n    deleteElement = (id) => {\r\n        this.setState(({data}) => {\r\n                const newData = data.filter((e) => e.id !== id);\r\n                this.putNewDataInLocalStorage(newData);\r\n                return {\r\n                    data: newData\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    toggleImportant = (id) => {\r\n        this.setState(({data}) => this.toggleProperty(data, id, 'important'))\r\n    }\r\n    toggleDone = (id) => {\r\n        this.setState(({data}) => this.toggleProperty(data, id, 'done'))\r\n    }\r\n    toggleProperty = (arr, id, propName) => {\r\n        const i = arr.findIndex((e) => e.id === id),\r\n            item = arr[i];\r\n        return {\r\n            data: [...arr.slice(0, i), {...item, [propName]: !item[propName]}, ...arr.slice(i + 1)]\r\n        }\r\n    }\r\n    addElement = (label = \"\") => {\r\n        this.setState(({data, lastId}) => {\r\n                const newLastId = lastId + 1;\r\n                const newData = [...data, this.createToDoItem(newLastId, label)];\r\n                this.putNewDataInLocalStorage(newData);\r\n\r\n                return {\r\n                    data: newData,\r\n                    lastId: newLastId,\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    createToDoItem = (id = 0, label = \"\", important = false, done = false) => ({\r\n        id,\r\n        label,\r\n        important,\r\n        done\r\n    })\r\n\r\n    search = (items, text) => {\r\n\r\n        if (text.length === 0) return items;\r\n\r\n        return items.filter((item) => {\r\n            return (item.label.toLowerCase().indexOf(text.toLowerCase()) > -1)\r\n        });\r\n    }\r\n\r\n    setSearchText = (text) => {\r\n        //debugger\r\n        this.setState(({filterText}) => ({\r\n            filterText: text\r\n        }))\r\n    }\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items\r\n            case 'active':\r\n                return items.filter(item => !item.done)\r\n            case 'done':\r\n                return items.filter(item => item.done)\r\n        }\r\n    }\r\n    setButtonFilter = (val) => {\r\n        this.setState(({buttonFilter}) => ({\r\n            buttonFilter: val,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {data, filterText, buttonFilter} = this.state,\r\n            toDo = data.filter((e) => !e.done).length,\r\n            done = data.length - toDo,\r\n            filteredData = this.filter(this.search(data, filterText), buttonFilter);\r\n\r\n        return (<div className={\"body\"}>\r\n            <AppHeader toDo={toDo} done={done}/>\r\n            <SearchPanel placeholder={\"search...\"} activeButton={buttonFilter} setSearchText={this.setSearchText}\r\n                         setButtonFilter={this.setButtonFilter}/>\r\n            <ToDoList\r\n                todos={filteredData}\r\n                onDelete={this.deleteElement}\r\n                addElement={this.addElement}\r\n                toggleImportant={this.toggleImportant}\r\n                toggleDone={this.toggleDone}\r\n            />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App/App\";\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}