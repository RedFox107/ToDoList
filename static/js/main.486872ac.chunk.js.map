{"version":3,"sources":["Components/ToDoList/ToDoList.module.css","Components/SearchPanel/SearchPanel.module.css","Components/AppHeader/AppHeader.module.css","Components/AppHeader/AppHeader.jsx","Components/SearchPanel/SearchPanel.jsx","Components/ToDoList/ToDoListItem.jsx","Components/ToDoList/ToDoList.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","AppHeader","toDo","done","className","s","appHeader","ItemStatusFilter","state","activeFilter","buttons","label","name","id","setFilter","e","props","setButtonFilter","target","activeButton","this","btnGroup","map","key","active","onClick","React","PureComponent","SearchPanel","placeholder","baseBlock","searchInput","onChange","setSearchText","value","ToDoListItem","isRefactorNow","itemText","setImportant","toggleImportant","deleteElement","onDeleted","toggleDone","toggleRefactorMode","setState","refactorItem","val","onRefEnd","onRefactor","important","toDoListItem","toDoListItemLabel","toDoListItemInput","autoFocus","btnWrap","refactorBtn","btn","aria-hidden","excBtn","trashBtn","defaultProps","ToDoList","newItemText","errors","ref","createRef","changeText","clear","current","addElement","todos","toDoList","item","text","setNewTextInItem","onDelete","CreateItem","Component","forwardRef","createItemWrapper","s_searchPanel","onKeyUp","App","data","lastId","filterText","buttonFilter","putNewDataInLocalStorage","localStorage","setItem","JSON","stringify","newData","filter","toggleProperty","arr","propName","i","findIndex","slice","newLastId","createToDoItem","search","items","length","toLowerCase","indexOf","savedTodoItems","parse","getItem","todoItemsWithNewId","index","filteredData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.486872ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"important\":\"ToDoList_important__k6C16\",\"toDoList\":\"ToDoList_toDoList__hWKq0\",\"toDoListItem\":\"ToDoList_toDoListItem__Fl_-T\",\"toDoListItemLabel\":\"ToDoList_toDoListItemLabel__2qV8M\",\"toDoListItemInput\":\"ToDoList_toDoListItemInput__1cdOr\",\"btnWrap\":\"ToDoList_btnWrap__Z-JUe\",\"btn\":\"ToDoList_btn__2EzZz\",\"excBtn\":\"ToDoList_excBtn__3K01o\",\"trashBtn\":\"ToDoList_trashBtn__3hXSa\",\"refactorBtn\":\"ToDoList_refactorBtn__3B4gn\",\"done\":\"ToDoList_done__K6XMJ\",\"createItemWrapper\":\"ToDoList_createItemWrapper__tiwpo\",\"errors\":\"ToDoList_errors__2cuTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseBlock\":\"SearchPanel_baseBlock__hYsJL\",\"searchInput\":\"SearchPanel_searchInput__mKZKa\",\"btnGroup\":\"SearchPanel_btnGroup__3c-KR\",\"active\":\"SearchPanel_active__1UNzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1I59V\"};","import React from \"react\";\r\nimport s from './AppHeader.module.css';\r\nimport './../../style.css';\r\n\r\nconst AppHeader = ({toDo,done})=>{\r\n    return (<div className={`${s.appHeader} flex`}>\r\n        <h1>Todo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n    </div>)\r\n}\r\nexport default AppHeader\r\n\r\n","import React from \"react\";\r\nimport s from './SearchPanel.module.css';\r\n\r\nclass ItemStatusFilter extends React.PureComponent {\r\n    state = {\r\n        activeFilter:0\r\n    }\r\n    buttons = [\r\n        {label:'All',name:\"all\",id:0},\r\n        {label:'Active',name:\"active\",id:1},\r\n        {label:'Done',name:\"done\",id:2},\r\n    ]\r\n    setFilter = (e)=>{\r\n        this.props.setButtonFilter(e.target.name)\r\n    }\r\n    render() {\r\n        const {activeButton} = this.props;\r\n        return (\r\n            <div className={s.btnGroup}>\r\n                {this.buttons.map((e)=>(\r\n                    <button\r\n                        name={e.name}\r\n                        key={e.id}\r\n                        className={(activeButton===e.name)?s.active:\"\"}\r\n                        onClick={this.setFilter}>{e.label}</button>\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SearchPanel = ({placeholder = '', ...props}) => {\r\n    const setSearchText = (e)=>{\r\n        props.setSearchText(e.target.value)\r\n    }\r\n    return (<div className={s.baseBlock}>\r\n        <input placeholder={placeholder} className={s.searchInput} onChange={setSearchText}/>\r\n        <ItemStatusFilter setButtonFilter={props.setButtonFilter} activeButton={props.activeButton}/>\r\n    </div>)\r\n}\r\n\r\nexport default SearchPanel","import React from \"react\";\r\nimport s from './ToDoList.module.css';\r\n\r\nclass ToDoListItem extends React.PureComponent {\r\n    state = {\r\n        isRefactorNow:false,\r\n        itemText:this.props.label\r\n    }\r\n    setImportant = () => {\r\n        this.props.toggleImportant()\r\n    }\r\n    deleteElement = () => {\r\n        this.props.onDeleted();\r\n    }\r\n    toggleDone = () => {\r\n        this.props.toggleDone();\r\n    }\r\n    toggleRefactorMode = ()=>{\r\n        this.setState(({isRefactorNow})=>({\r\n            isRefactorNow:!isRefactorNow\r\n        }))\r\n    }\r\n    refactorItem = (e)=>{\r\n        const val = e.target.value\r\n        this.setState(()=>({\r\n            itemText:val\r\n        }))\r\n    }\r\n    onRefEnd = ()=>{\r\n        this.props.onRefactor(this.state.itemText)\r\n        this.toggleRefactorMode();\r\n    }\r\n\r\n    render() {\r\n        const {label, done, important} = this.props;\r\n        const {isRefactorNow} = this.state;\r\n\r\n        return (\r\n            <div className={s.toDoListItem}>\r\n                {(isRefactorNow)\r\n                    ?\r\n                    <input onChange={this.refactorItem} value={this.state.itemText} className={`${s.toDoListItemLabel} ${s.toDoListItemInput}`} autoFocus={true}/>\r\n                    :\r\n                    <span\r\n                        className={`${s.toDoListItemLabel}  ${important && s.important} ${done && s.done}`}\r\n                        onClick={this.toggleDone}\r\n                    >{label}</span>\r\n                }\r\n                <div className={s.btnWrap}>\r\n                    <button className={`${s.refactorBtn} ${s.btn}`}\r\n                            onClick={(isRefactorNow)?this.onRefEnd:this.toggleRefactorMode}\r\n                    >\r\n                        <i className={isRefactorNow?\"fa fa-times\":\"fa fa-pencil\"} aria-hidden=\"true\"/>\r\n                    </button>\r\n                    <button className={`${s.excBtn} ${s.btn}`} onClick={this.setImportant}>\r\n                        <i className={\"fa fa-exclamation\"}/>\r\n                    </button>\r\n                    <button className={`${s.trashBtn} ${s.btn}`} onClick={this.deleteElement}>\r\n                        <i className={\"fa fa-trash-o\"}/>\r\n                    </button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nToDoListItem.defaultProps = {important: false}\r\nexport default ToDoListItem;","import React from \"react\";\r\nimport ToDoListItem from \"./ToDoListItem\";\r\nimport s from './ToDoList.module.css';\r\nimport s_searchPanel from '../SearchPanel/SearchPanel.module.css'\r\n\r\nclass ToDoList extends React.Component {\r\n    state = {\r\n        newItemText: \"\",\r\n        errors: \"\"\r\n    }\r\n    ref = React.createRef();\r\n    changeText = (e, clear = false) => {\r\n\r\n        this.setState(() => {\r\n            return {\r\n                errors: \"\",\r\n                newItemText: !clear ? (this.ref.current.value) : ''\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addElement = () => {\r\n        const label = this.state.newItemText\r\n        if (!label) {\r\n            this.setState((state) => ({\r\n                ...state,\r\n                errors: \"Text field cannot be empty!\"\r\n            }))\r\n            return;\r\n        }\r\n        this.props.addElement(label);\r\n\r\n        this.changeText(null, true);\r\n    }\r\n\r\n    render() {\r\n        let {todos, ...props} = this.props;\r\n        const {newItemText, errors} = this.state\r\n        return (\r\n            <>\r\n                <ul className={s.toDoList}>\r\n                    {todos.map(({id, ...item}) => (\r\n                            <li key={id}>\r\n                                <ToDoListItem\r\n                                    {...item}\r\n                                    onRefactor={\r\n                                        (text)=>{this.props.setNewTextInItem(id,text)}\r\n                                    }\r\n                                    onDeleted={() => {\r\n                                        props.onDelete(id);\r\n                                    }}\r\n                                    toggleImportant={() => {\r\n                                        props.toggleImportant(id)\r\n                                    }}\r\n                                    toggleDone={() => {\r\n                                        props.toggleDone(id)\r\n                                    }}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    )\r\n                    }\r\n                </ul>\r\n                <CreateItem newItemText={newItemText} errors={errors} ref={this.ref} changeText={this.changeText} addElement={this.addElement}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst CreateItem = React.forwardRef(({newItemText, errors,changeText,addElement},ref) => {\r\n    return <>\r\n        <div className={s.createItemWrapper}>\r\n            <input\r\n                onChange={changeText}\r\n                className={s_searchPanel.searchInput}\r\n                value={newItemText} ref={ref}\r\n                placeholder={\"Create new item...\"}\r\n                onKeyUp={({key})=>{key==='Enter'&&addElement()}}\r\n            />\r\n            <button onClick={addElement} className={s.btn}>Add item</button>\r\n        </div>\r\n        <div className={s.errors}>\r\n            <span>{errors}</span>\r\n        </div>\r\n    </>\r\n})\r\n\r\nexport default ToDoList\r\n\r\n","import AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\nimport React from \"react\";\r\nimport '../../style.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: [],\r\n        lastId: 0,\r\n        filterText: \"\",\r\n        buttonFilter: 'all'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const savedTodoItems = JSON.parse(localStorage.getItem(\"todo_items\")) || [];\r\n        const todoItemsWithNewId = savedTodoItems.map((val,index)=>{\r\n            val.id = index;\r\n        })\r\n        this.setState(() => ({data: savedTodoItems,lastId:todoItemsWithNewId.length-1}))\r\n    }\r\n\r\n    putNewDataInLocalStorage = (data) => {\r\n        localStorage.setItem('todo_items', JSON.stringify(data));\r\n    }\r\n    deleteElement = (id) => {\r\n        this.setState(({data}) => {\r\n                const newData = data.filter((e) => e.id !== id);\r\n                this.putNewDataInLocalStorage(newData);\r\n                return {\r\n                    data: newData\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    toggleImportant = (id) => {\r\n        this.setState(({data}) => this.toggleProperty(data, id, 'important'))\r\n    }\r\n    toggleDone = (id) => {\r\n        this.setState(({data}) => this.toggleProperty(data, id, 'done'))\r\n    }\r\n    toggleProperty = (arr, id, propName) => {\r\n        const i = arr.findIndex((e) => e.id === id),\r\n            item = arr[i];\r\n        const newData = [...arr.slice(0, i), {...item, [propName]: !item[propName]}, ...arr.slice(i + 1)];\r\n        this.putNewDataInLocalStorage(newData);\r\n        return {\r\n            data: newData\r\n        }\r\n    }\r\n    addElement = (label = \"\") => {\r\n        this.setState(({data, lastId}) => {\r\n                const newLastId = lastId + 1;\r\n                const newData = [...data, this.createToDoItem(newLastId, label)];\r\n                this.putNewDataInLocalStorage(newData);\r\n                return {\r\n                    data: newData,\r\n                    lastId: newLastId,\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    createToDoItem = (id = 0, label = \"\", important = false, done = false) => ({\r\n        id,\r\n        label,\r\n        important,\r\n        done\r\n    })\r\n    setNewTextInItem = (id,text)=>{\r\n        this.setState(({data})=>{\r\n            const newData = data.map((e)=>{\r\n                if(e.id===id)\r\n                    e.label = text\r\n                return e;\r\n            });\r\n            this.putNewDataInLocalStorage(newData)\r\n            return {\r\n                data:newData\r\n            }\r\n        })\r\n    }\r\n\r\n    search = (items, text) => {\r\n\r\n        if (text.length === 0) return items;\r\n\r\n        return items.filter((item) => {\r\n            return (item.label.toLowerCase().indexOf(text.toLowerCase()) > -1)\r\n        });\r\n    }\r\n    setSearchText = (text) => {\r\n        //debugger\r\n        this.setState(({filterText}) => ({\r\n            filterText: text\r\n        }))\r\n    }\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items\r\n            case 'active':\r\n                return items.filter(item => !item.done)\r\n            case 'done':\r\n                return items.filter(item => item.done)\r\n        }\r\n    }\r\n    setButtonFilter = (val) => {\r\n        this.setState(({buttonFilter}) => ({\r\n            buttonFilter: val,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {data, filterText, buttonFilter} = this.state,\r\n            toDo = data.filter((e) => !e.done).length,\r\n            done = data.length - toDo,\r\n            filteredData = this.filter(this.search(data, filterText), buttonFilter);\r\n\r\n        return (<div className={\"body\"}>\r\n            <AppHeader toDo={toDo} done={done}/>\r\n            <SearchPanel placeholder={\"search...\"} activeButton={buttonFilter} setSearchText={this.setSearchText}\r\n                         setButtonFilter={this.setButtonFilter}/>\r\n            <ToDoList\r\n                setNewTextInItem={this.setNewTextInItem}\r\n                todos={filteredData}\r\n                onDelete={this.deleteElement}\r\n                addElement={this.addElement}\r\n                toggleImportant={this.toggleImportant}\r\n                toggleDone={this.toggleDone}\r\n            />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App/App\";\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}