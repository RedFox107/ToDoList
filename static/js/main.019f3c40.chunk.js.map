{"version":3,"sources":["Components/ToDoList/ToDoList.module.css","Components/SearchPanel/SearchPanel.module.css","Components/AppHeader/AppHeader.module.css","Components/AppHeader/AppHeader.jsx","Components/SearchPanel/SearchPanel.jsx","Components/ToDoList/ToDoListItem.jsx","Components/ToDoList/ToDoList.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","AppHeader","toDo","done","className","s","appHeader","ItemStatusFilter","state","activeFilter","buttons","label","name","id","setFilter","e","props","setButtonFilter","target","activeButton","this","active","btnGroup","map","key","onClick","React","PureComponent","SearchPanel","placeholder","baseBlock","searchInput","onChange","setSearchText","value","ToDoListItem","setImportant","toggleImportant","deleteElement","onDeleted","toggleDone","important","toDoListItem","toDoListItemLabel","excBtn","btn","trashBtn","defaultProps","ToDoList","newItemText","errors","ref","createRef","changeText","clear","setState","current","addElement","todos","toDoList","item","onDelete","createItemWrapper","s_searchPanel","Component","App","data","lastId","filterText","buttonFilter","filter","toggleProperty","arr","propName","i","findIndex","slice","createToDoItem","search","items","text","length","toLowerCase","indexOf","val","window","filteredData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.019f3c40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"important\":\"ToDoList_important__k6C16\",\"toDoList\":\"ToDoList_toDoList__hWKq0\",\"toDoListItem\":\"ToDoList_toDoListItem__Fl_-T\",\"toDoListItemLabel\":\"ToDoList_toDoListItemLabel__2qV8M\",\"btn\":\"ToDoList_btn__2EzZz\",\"excBtn\":\"ToDoList_excBtn__3K01o\",\"trashBtn\":\"ToDoList_trashBtn__3hXSa\",\"done\":\"ToDoList_done__K6XMJ\",\"createItemWrapper\":\"ToDoList_createItemWrapper__tiwpo\",\"errors\":\"ToDoList_errors__2cuTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseBlock\":\"SearchPanel_baseBlock__hYsJL\",\"searchInput\":\"SearchPanel_searchInput__mKZKa\",\"btnGroup\":\"SearchPanel_btnGroup__3c-KR\",\"active\":\"SearchPanel_active__1UNzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1I59V\"};","import React from \"react\";\r\nimport s from './AppHeader.module.css'\r\nimport './../../style.css'\r\nconst AppHeader = ({toDo,done})=>{\r\n    return (<div className={`${s.appHeader} flex`}>\r\n        <h1>Todo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n    </div>)\r\n}\r\nexport default AppHeader\r\n\r\n","import React from \"react\";\r\nimport s from './SearchPanel.module.css';\r\n\r\nclass ItemStatusFilter extends React.PureComponent {\r\n    state = {\r\n        activeFilter:0\r\n    }\r\n    buttons = [\r\n        {label:'All',name:\"all\",id:0},\r\n        {label:'Active',name:\"active\",id:1},\r\n        {label:'Done',name:\"done\",id:2},\r\n    ]\r\n    setFilter = (e)=>{\r\n        this.props.setButtonFilter(e.target.name)\r\n    }\r\n    render() {\r\n        const {active} = this.state,\r\n            {activeButton} = this.props;\r\n        return (\r\n            <div className={s.btnGroup}>\r\n                {this.buttons.map((e)=>(\r\n                    <button\r\n                        name={e.name}\r\n                        key={e.id}\r\n                        className={(activeButton===e.name)?s.active:\"\"}\r\n                        onClick={this.setFilter}>{e.label}</button>\r\n                    )\r\n                )}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SearchPanel = ({placeholder = '', ...props}) => {\r\n    const setSearchText = (e)=>{\r\n        props.setSearchText(e.target.value)\r\n    }\r\n    return (<div className={s.baseBlock}>\r\n        <input placeholder={placeholder} className={s.searchInput} onChange={setSearchText}/>\r\n        <ItemStatusFilter setButtonFilter={props.setButtonFilter} activeButton={props.activeButton}/>\r\n    </div>)\r\n}\r\n\r\nexport default SearchPanel","import React from \"react\";\r\nimport s from './ToDoList.module.css';\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nclass ToDoListItem extends React.PureComponent {\r\n    setImportant = ()=>{\r\n        this.props.toggleImportant()\r\n    }\r\n    deleteElement = ()=>{\r\n        this.props.onDeleted();\r\n    }\r\n    toggleDone = ()=>{\r\n        this.props.toggleDone();\r\n    }\r\n    render() {\r\n        const {id,label,done,important, ...props} = this.props;\r\n\r\n        return (\r\n            <span className={s.toDoListItem}>\r\n            <span\r\n                className={`${s.toDoListItemLabel}  ${important && s.important} ${done && s.done}`}\r\n                onClick={this.toggleDone}\r\n            >{label}</span>\r\n            <button className={`${s.excBtn} ${s.btn}`} onClick={this.setImportant} >\r\n                <i className={\"fa fa-exclamation\"}/>\r\n            </button>\r\n            <button className={`${s.trashBtn} ${s.btn}`} onClick={this.deleteElement}>\r\n                <i className={\"fa fa-trash-o\"}/>\r\n            </button>\r\n        </span>\r\n        )\r\n    }\r\n}\r\n\r\nToDoListItem.defaultProps = {important: false}\r\nexport default ToDoListItem;","import React from \"react\";\r\nimport ToDoListItem from \"./ToDoListItem\";\r\nimport s from './ToDoList.module.css';\r\nimport s_searchPanel from '../SearchPanel/SearchPanel.module.css'\r\n\r\nclass ToDoList extends React.Component {\r\n    state={\r\n        newItemText:\"\",\r\n        errors:\"\"\r\n    }\r\n    ref =  React.createRef();\r\n    changeText = (e,clear=false)=>{\r\n        this.setState((state)=>{\r\n            return {\r\n                errors:\"\",\r\n                newItemText: !clear?(this.ref.current.value) : ''\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addElement = ()=>{\r\n        const label = this.state.newItemText\r\n        if(!label){\r\n            this.setState((state)=>({\r\n                ...state,\r\n                errors:\"Text field cannot be empty!\"\r\n            }))\r\n            return;\r\n        }\r\n        this.props.addElement(label);\r\n\r\n        this.changeText(null,true);\r\n    }\r\n    render() {\r\n        let {todos, ...props} = this.props;\r\n        const {newItemText,errors} = this.state\r\n        return (\r\n            <>\r\n                <ul className={s.toDoList}>\r\n                    {todos.map(({id, ...item}) => (\r\n                            <li key={id}>\r\n                                <ToDoListItem\r\n                                    {...item}\r\n                                    onDeleted={() => {\r\n                                        props.onDelete(id);\r\n                                    }}\r\n                                    toggleImportant={() => {\r\n                                        props.toggleImportant(id)\r\n                                    }}\r\n                                    toggleDone={() => {\r\n                                        props.toggleDone(id)\r\n                                    }}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    )\r\n                    }\r\n                </ul>\r\n                <div className={s.createItemWrapper}>\r\n                <input\r\n                    onChange={this.changeText}\r\n                    className={s_searchPanel.searchInput}\r\n                    value={newItemText} ref={this.ref}\r\n                    placeholder={\"Create new item...\"}\r\n                />\r\n                    <button onClick={this.addElement} className={s.btn}>Add item</button>\r\n                </div>\r\n                <div className={s.errors}>\r\n                    <span>{errors}</span>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList\r\n\r\n","import AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\nimport React from \"react\";\r\nimport '../../style.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: [\r\n            \r\n        ],\r\n        lastId: 0,\r\n        filterText:\"\",\r\n        buttonFilter:'all'\r\n    }\r\n    deleteElement = (id)=> {\r\n        this.setState(({data})=>(\r\n            {data:data.filter((e) => e.id !== id)}\r\n            )\r\n        )\r\n\r\n    }\r\n    toggleImportant = (id)=>{\r\n        this.setState(({data})=>this.toggleProperty(data,id,'important'))\r\n    }\r\n    toggleDone = (id)=>{\r\n        this.setState(({data})=>this.toggleProperty(data,id,'done'))\r\n    }\r\n    toggleProperty = (arr,id,propName)=>{\r\n        const i = arr.findIndex((e)=>e.id===id),\r\n            item = arr[i];\r\n        return {\r\n            data:[...arr.slice(0,i),{...item,[propName]:!item[propName]},...arr.slice(i+1)]\r\n        }\r\n    }\r\n    addElement = (label=\"\")=>{\r\n        this.setState(({data,lastId})=>(\r\n                {\r\n                    data:[...data,this.createToDoItem(lastId+1,label)],\r\n                    lastId:lastId+1,\r\n                }\r\n            )\r\n        )\r\n    }\r\n    createToDoItem = (id=0,label=\"\",important=false,done=false) => ({\r\n        id,\r\n        label,\r\n        important,\r\n        done\r\n    })\r\n\r\n    search = (items,text)=>{\r\n\r\n        if(text.length===0) return items;\r\n\r\n        return items.filter((item)=> {\r\n            return (item.label.toLowerCase().indexOf(text.toLowerCase()) > -1)\r\n        });\r\n    }\r\n\r\n    setSearchText = (text)=>{\r\n        //debugger\r\n        this.setState(({filterText})=>({\r\n            filterText:text\r\n        }))\r\n    }\r\n\r\n    filter = (items,filter)=>{\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n                break;\r\n            case 'active':\r\n                return items.filter(item=>!item.done)\r\n                break;\r\n            case 'done':\r\n                return items.filter(item=>item.done)\r\n                break;\r\n        }\r\n    }\r\n    setButtonFilter = (val)=>{\r\n        this.setState(({buttonFilter})=>({\r\n            buttonFilter:val,\r\n        }))\r\n    }\r\n    render() {\r\n        window.state = this.state\r\n        const {data,filterText,buttonFilter} = this.state,\r\n            toDo = data.filter((e)=>!e.done).length,\r\n            done = data.length-toDo,\r\n            filteredData = this.filter(this.search(data,filterText),buttonFilter);\r\n\r\n        return (<div className={\"body\"}>\r\n            <AppHeader toDo={toDo} done={done}/>\r\n            <SearchPanel placeholder={\"search...\"} activeButton={buttonFilter} setSearchText={this.setSearchText} setButtonFilter={this.setButtonFilter}/>\r\n            <ToDoList\r\n                todos={filteredData}\r\n                onDelete={this.deleteElement}\r\n                addElement={this.addElement}\r\n                toggleImportant={this.toggleImportant}\r\n                toggleDone={this.toggleDone}\r\n            />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App/App\";\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}